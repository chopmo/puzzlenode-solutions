
Just a few notes for when I find time to solve this one. 

Overall strategy
* Parse each ASCII diagram into a Circuit
* Get the result for the circuit with something like circuit.lightbulb.value

Parser: 
* Find all "root", ie. the switches in the leftmost column
* Maintain a queue of nodes to be examined. Initially contains the roots.
* For each node in the queue

** Parse the node into a Component and add this to the cache-local ComponentRepo which maps coords to parsed Components. 

** Follow the wire (create a class WireTracer) until another node is found. Add this node to the queue. 

The result should be a Circuit with a set of interconnected components. 
** Some components have one input (lightbulb, NOT), 
** some have two (AND, OR. XOR), 
** some have none (switch)


The input is connected directly to the component to which it was connected with wire (ie. the wire is of course ignored at this point). 

The circuit needs a link to its lighbulb because this is always the entry point. 

A componenent can determine its value from its inputs. Eg. for a lightbulb this will just delegate to its input, for a gate there will be some logic. For a switch, the value will be fixed at creation time. 